using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace Server.Settings
{
    struct SSettings
    {
        public String strName;
        public Object objValue;
    }

    class CSettings
    {
        public const String Settings_File = "Server.cfg";
        static List<SSettings> m_lstSettings;

        public static bool LoadSettings()
        {
            try
            {
                if (m_lstSettings == null) m_lstSettings = new List<SSettings>();

                m_lstSettings.Clear();

                if (!File.Exists(Settings_File)) return false;

                String[] arr_strSettings = File.ReadAllLines(Settings_File);

                if (arr_strSettings.Length == 0) return false;

                foreach (String strSettings in arr_strSettings)
                {
                    String[] arr_strData = strSettings.Split('=');

                    if (arr_strData.Length != 2) continue;

                    SSettings Settings = new SSettings();
                    Settings.strName = arr_strData[0];
                    Settings.objValue = (object)arr_strData[1];

                    m_lstSettings.Add(Settings);
                }
                return true;
            }
            catch
            {

            }
            return false;
        }

        public static bool SaveSettings()
        {
            try
            {
                List<String> lstNewSettings = new List<String>();

                foreach (SSettings Settings in m_lstSettings.ToArray())
                {
                    try
                    {
                        lstNewSettings.Add(String.Format("{0}={1}", Settings.strName, Settings.objValue.ToString()));
                    }
                    catch
                    {

                    }
                }

                if (lstNewSettings.Count == 0) return false;

                File.WriteAllLines(Settings_File, lstNewSettings.ToArray());
                return true;
            }
            catch
            {

            }
            return false;
        }

        public static object GetValue(String strName)
        {
            try
            {
                foreach (SSettings Settings in m_lstSettings.ToArray())
                {
                    if (Settings.strName == strName)
                    {
                        return Settings.objValue;
                    }
                }
            }
            catch
            {

            }
            return null;
        }

        public static bool SetValue(String strName, object objValue)
        {
            try
            {
                for (int i = 0; i < m_lstSettings.Count; i++)
                {
                    SSettings Settings = m_lstSettings[i];
                    if (Settings.strName == strName)
                    {
                        Settings.objValue = objValue;
                        m_lstSettings[i] = Settings;
                        return true;
                    }
                }

                SSettings New_Settings = new SSettings();
                New_Settings.strName = strName;
                New_Settings.objValue = objValue;
                m_lstSettings.Add(New_Settings);
                return true;
            }
            catch
            {

            }
            return false;
        }
    }
}
